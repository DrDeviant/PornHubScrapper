import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from scipy.signal import find_peaks


svg_str = "0,2 5.649717514124294,10 11.299435028248588,18 16.949152542372882,22 22.598870056497177,28 28.24858757062147,30 33.898305084745765,33 39.54802259887006,34 45.19774011299435,35 50.847457627118644,35 56.49717514124294,37 62.14689265536724,39 67.79661016949153,40 73.44632768361582,43 79.09604519774012,44 84.74576271186442,45 90.3954802259887,46 96.045197740113,48 101.69491525423729,48 107.34463276836159,50 112.99435028248588,51 118.64406779661017,52 124.29378531073448,53 129.94350282485877,53 135.59322033898306,54 141.24293785310735,56 146.89265536723164,57 152.54237288135593,56 158.19209039548025,58 163.84180790960454,59 169.49152542372883,59 175.14124293785312,58 180.7909604519774,58 186.4406779661017,59 192.090395480226,60 197.74011299435028,60 203.38983050847457,59 209.0395480225989,59 214.68926553672318,58 220.33898305084747,57 225.98870056497177,56 231.63841807909606,55 237.28813559322035,55 242.93785310734464,55 248.58757062146896,56 254.23728813559325,55 259.88700564971754,58 265.5367231638418,58 271.1864406779661,57 276.8361581920904,57 282.4858757062147,55 288.135593220339,52 293.7853107344633,48 299.43502824858757,39 305.08474576271186,30 310.73446327683615,21 316.3841807909605,16 322.0338983050848,10 327.6836158192091,6 333.33333333333337,3 338.98305084745766,0 344.63276836158195,1 350.28248587570624,6 355.93220338983053,10 361.5819209039548,13 367.2316384180791,14 372.8813559322034,15 378.5310734463277,16 384.180790960452,18 389.8305084745763,18 395.48022598870057,19 401.12994350282486,21 406.77966101694915,22 412.4293785310735,23 418.0790960451978,25 423.7288135593221,26 429.37853107344637,27 435.02824858757066,29 440.67796610169495,29 446.32768361581924,30 451.97740112994353,30 457.6271186440678,30 463.2768361581921,30 468.9265536723164,31 474.5762711864407,31 480.225988700565,31 485.8757062146893,31 491.52542372881356,29 497.1751412429379,28 502.8248587570622,29 508.4745762711865,27 514.1242937853108,25 519.7740112994351,22 525.4237288135594,18 531.0734463276837,18 536.723163841808,17 542.3728813559322,17 548.0225988700565,18 553.6723163841808,19 559.3220338983051,23 564.9717514124294,24 570.6214689265537,27 576.271186440678,28 581.9209039548023,27 587.5706214689266,23 593.2203389830509,20 598.8700564971751,28 604.5197740112994,36 610.1694915254237,40 615.819209039548,41 621.4689265536723,41 627.1186440677966,43 632.768361581921,43 638.4180790960453,45 644.0677966101696,45 649.7175141242939,47 655.3672316384182,48 661.0169491525425,48 666.6666666666667,49 672.316384180791,48 677.9661016949153,48 683.6158192090396,50 689.2655367231639,51 694.9152542372882,51 700.5649717514125,52 706.2146892655368,52 711.8644067796611,52 717.5141242937854,54 723.1638418079096,54 728.8135593220339,53 734.4632768361582,51 740.1129943502825,46 745.7627118644068,43 751.4124293785311,46 757.0621468926554,48 762.7118644067797,51 768.361581920904,54 774.0112994350283,52 779.6610169491526,51 785.3107344632768,51 790.9604519774011,53 796.6101694915254,57 802.2598870056497,58 807.909604519774,58 813.5593220338983,61 819.2090395480227,61 824.858757062147,61 830.5084745762713,60 836.1581920903956,63 841.8079096045199,65 847.4576271186442,64 853.1073446327684,65 858.7570621468927,64 864.406779661017,65 870.0564971751413,68 875.7062146892656,67 881.3559322033899,69 887.0056497175142,68 892.6553672316385,68 898.3050847457628,66 903.9548022598871,64 909.6045197740114,63 915.2542372881356,61 920.9039548022599,57 926.5536723163842,55 932.2033898305085,50 937.8531073446328,51 943.5028248587571,56 949.1525423728814,58 954.8022598870057,59 960.45197740113,60 966.1016949152543,62 971.7514124293785,72 977.4011299435028,78 983.0508474576271,81 988.7005649717514,84 994.3502824858758,86 1000.0000000000001,90 1005.6497175141244,100 0, 100"


def getHistogram(svg_str):
    svg_list = svg_str.split(' ')
    hist = []
    x_ax = []
    for svg_obj in svg_list[1:-2]:
        x, y = svg_obj.split(',')
        hist.append(100 - int(y))
        x_ax.append(float(x))
    return x_ax, hist

def WMA(s, period):
       return s.rolling(period).apply(lambda x: ((np.arange(period)+1)*x).sum()/(np.arange(period)+1).sum(), raw=True)

def HMA(s, period):
       return WMA(WMA(s, period//2).multiply(2).sub(WMA(s, period)), int(np.sqrt(period)))

def getPeaks(hist_list):
    peaks_locations = []
    hma_hist = HMA(pd.DataFrame(hist_list), 10)
    hist = hma_hist[0].values.tolist()
    np_hist = np.array(hist)
    peaks, _ = find_peaks(np_hist, distance=30)
    peaks_locations = peaks/len(hist_list)
    # plt.plot(hist_list)
    # plt.plot(np_hist)
    # plt.plot(peaks, np_hist[peaks], "x")
    # plt.show()
    return peaks_locations

def getPeaksTime(svg_str, duration_in_seconds):
    x_ax, hist = getHistogram(svg_str)
    peaks_locations = getPeaks(hist)
    return peaks_locations * duration_in_seconds

print(getPeaksTime(svg_str, 600))